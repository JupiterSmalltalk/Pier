upstream seaside {
    server 127.0.0.1:8383;
}

server {

	listen 80;
	server_name pier.dev pier.mydomain.com;
	root /opt/git/JupiterSmalltalk/Pier/www_root;
	client_max_body_size 10M;
	
	location @seaside {
		proxy_pass		http://seaside;
		proxy_http_version	1.1;
		proxy_redirect		off;
		proxy_set_header	Authorization $http_authorization;
		proxy_pass_header	Authorization;
		proxy_set_header	Host             $host;
		proxy_set_header	X-Real-IP        $remote_addr;
		proxy_set_header	X-Forwarded-For  $proxy_add_x_forwarded_for;
	}
	
	# Upload form should be submitted to this location
	location ~ /upload {
	
		# Pass altered request body to this location
		upload_pass /;

		error_page 405 415 = /;

		# Store files to this directory
		upload_store /opt/git/JupiterSmalltalk/Pier/www_root/upload;

		# Allow uploaded files to be read only by user
		upload_store_access user:rw group:rw all:r;

		# Set specified fields in request body
		upload_set_form_field $upload_field_name "";
		upload_set_form_field $upload_field_name.name "$upload_file_name";
		upload_set_form_field $upload_field_name.content_type "$upload_content_type";
		upload_set_form_field $upload_field_name.path "$upload_tmp_path";

		# seaside automatically assigns sequential integers to fields with callbacks
		# we want to pass those fields to the backend
		upload_pass_form_field "^\d+$";

		upload_cleanup 400 404 499 500-505;
	}
	
	location ~ /webdav {
		# WebDAV
		root /opt/git/JupiterSmalltalk/Pier/www_webdav/files;
		client_body_temp_path /opt/git/JupiterSmalltalk/www_webdav/tmp;
		dav_methods PUT DELETE MKCOL COPY MOVE;
		dav_ext_methods PROPFIND OPTIONS;
		create_full_put_path  on;
		dav_access user:rw group:rw all:r;
		
		# WebDAV Seaside Authorisation
		auth_request /nginxAuth;
		
	}
	
	# For authorising WebDAV connections via a seaside backend
	location = /nginxAuth {
		proxy_pass 					http://seaside/nginxAuth;
		proxy_pass_request_body 	off;
		proxy_set_header 			Content-Length 		"";
		proxy_set_header 			X-Original-URI 		$request_uri;
		proxy_set_header 			User 				$remote_user;
	}
	
	location /pier {
		try_files $uri $uri/ @seaside;
	}
	
	location /files/ {
		try_files $uri @seaside;
	}
	
	if ($uri = /) {
		rewrite ^(.*)$ /pier$1 break;
	}	
}
